#!/bin/sh

# find-git-branch:  tests whether a branch exists in a Git repository;
#   prints the branch, or prints "master" if the branch does not exist.
# Usage:  find-git-branch REPO BRANCH
# Prints either BRANCH, if it exists in REPO, or else "master".

# For example usage within a Travis build, see
# https://github.com/plume-lib/plume-scripts#usage-of-git-find-forkbranch

if [ "$#" -ne 2 ]; then
    echo "Error: $0 requires 2 arguments, got $#"
    echo "Usage: $0 REPO BRANCH"
    exit 1
fi

REPO=$1
BRANCH=$2

if (git ls-remote --quiet --exit-code --heads ${REPO} ${BRANCH} > /dev/null) ; then
  echo ${BRANCH}
else
  echo "master"
fi
