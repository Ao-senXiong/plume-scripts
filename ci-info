#!/bin/sh

# Outputs information about a CI job, when run under Azure Pipelines,
# CircleCI, or Travis CI.
#
# Typical use:
#
#   git -C /tmp/plume-scripts pull > /dev/null 2>&1 \
#     || git -C /tmp clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
#   eval `/tmp/plume-scripts/ci-info DEFAULT-ORGANIZATION`
#
# For example use, see comments in file `lint-diff.py` in this directory.
# Optional argument DEFAULT-ORGANIZATION is used if no organization can be determined.

# Here are the variables that it sets:
# CI_IS_PULL_REQUEST: Either "true" or "false" (without the quotes).
# CI_ORGANIZATION: The GitHub organization.  In a PR, refers to the source.
# CI_BRANCH: In a PR, the source branch; otherwise, the branch being tested.
# CI_COMMIT_RANGE: An argument to `git diff` with the range of commits.
#    (Don't use it with `git log`, which interprets its argument differently.)


### Organization

## Continuous integration services
if [ "$TRAVIS" = "true" ]; then
  CI_ORGANIZATION=${TRAVIS_PULL_REQUEST_SLUG%/*}
  if [ "$CI_ORGANIZATION" = "" ]; then
    CI_ORGANIZATION=${TRAVIS_REPO_SLUG%/*}
  fi
elif [ -n "$AZURE_HTTP_USER_AGENT" ]; then
  SLUG=`wget -q -O - https://api.github.com/repos/${BUILD_REPOSITORY_NAME}/pulls/${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER} | jq .head.label | sed 's/"//g'`
  CI_ORGANIZATION=${SLUG%:*}
fi

## Git clone
if [ "$CI_ORGANIZATION" = "" ]; then
  URL=`git config --get remote.origin.url`
  SLUG=${URL#*:}
  CI_ORGANIZATION=${SLUG%/*}
fi

## Default
if [ "$CI_ORGANIZATION" = "" ]; then
  CI_ORGANIZATION=$1
fi

### Other information

if [ -n "$SYSTEM_PULLREQUEST_TARGETBRANCH" ] ; then
  ## Azure Pipelines
  BASE_COMMIT=`git rev-parse HEAD^1`
  CI_IS_PULL_REQUEST=true
  CI_IS_PR=1
  CI_BRANCH=$SYSTEM_PULLREQUEST_SOURCEBRANCH
  CI_COMMIT_RANGE=$BASE_COMMIT...$BUILD_SOURCEVERSION
elif [ -n "$TRAVIS_COMMIT_RANGE" ] ; then
  ## Travis CI
  CI_IS_PULL_REQUEST=$TRAVIS_PULL_REQUEST
  # $TRAVIS_COMMIT_RANGE is empty for builds triggered by the initial commit of a new branch.
  if [ $TRAVIS_PULL_REQUEST != false ] ; then
    CI_IS_PR=1
  fi
  CI_BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
  echo "echo TRAVIS_PULL_REQUEST_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH;"
  echo "echo TRAVIS_BRANCH=$TRAVIS_BRANCH;"
  echo "echo CI_BRANCH=$CI_BRANCH;"
  CI_COMMIT_RANGE=$TRAVIS_COMMIT_RANGE
elif [ -n "$CIRCLE_COMPARE_URL" ] ; then
  ## CircleCI
  if [ -n "$CIRCLE_PULL_REQUEST" ]; then
    CI_IS_PULL_REQUEST=true
  else
    CI_IS_PULL_REQUEST=false
  fi
  CI_COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | cut -d/ -f7)
  if [ $CI_COMMIT_RANGE != *"..."* ]; then
    CI_COMMIT_RANGE="${COMMIT_RANGE}...${COMMIT_RANGE}"
  fi
  CI_BRANCH=$CIRCLE_BRANCH
else
  # It's not a pull request.
  CI_IS_PULL_REQUEST=false
  # In git 2.22 and later, CI_BRANCH=`git branch --show-current`
  CI_BRANCH=`git branch | grep \* | cut -d ' ' -f2`
  echo echo "CI_BRANCH via git grep cut is '$CI_BRANCH';"
  if [ $CI_BRANCH = master ]; then
    CI_COMMIT_RANGE=HEAD^1..HEAD
  else      
    CI_COMMIT_RANGE=master...$BRANCH
  fi
fi

### Print it out

echo "echo CI_ORGANIZATION=$CI_ORGANIZATION;"
echo "CI_ORGANIZATION=$CI_ORGANIZATION; export CI_ORGANIZATION;"
echo "echo CI_IS_PULL_REQUEST=$CI_IS_PULL_REQUEST;"
echo "CI_IS_PULL_REQUEST=$CI_IS_PULL_REQUEST; export CI_IS_PULL_REQUEST;"
if [ -n "$CI_IS_PR" ]; then
  echo "CI_IS_PR=$CI_IS_PR; export CI_IS_PR;"
fi
echo "echo CI_BRANCH=$CI_BRANCH;"
echo "CI_BRANCH=$CI_BRANCH; export CI_BRANCH;"
echo "echo CI_COMMIT_RANGE=$CI_COMMIT_RANGE;"
echo "CI_COMMIT_RANGE=$CI_COMMIT_RANGE; export CI_COMMIT_RANGE;"
