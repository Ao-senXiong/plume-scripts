#!/bin/sh

# Outputs information about a CI job, when run under Azure Pipelines,
# CircleCI, or Travis CI.
#
# Typical use:
#
#   git -C /tmp/plume-scripts pull > /dev/null 2>&1 \
#     || git -C /tmp clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
#   eval `/tmp/plume-scripts/ci-info DEFAULT-ORGANIZATION`
#
# Here are the variables that it sets:
# CI_IS_PULL_REQUEST: Either "true" or "false" (without the quotes).
# CI_ORGANIZATION: The GitHub organization.  In a PR, refers to the source.
#   Optional argument DEFAULT-ORGANIZATION is used if no organization can be determined.
# CI_BRANCH: In a PR, the source branch; otherwise, the branch being tested.
# CI_COMMIT_RANGE: An argument to `git diff` with the range of commits.
#    (Don't use it with `git log`, which interprets its argument differently.)
# CI_COMMIT_RANGE_START: The start element of CI_COMMIT_RANGE.
# CI_COMMIT_RANGE_END: The end element of CI_COMMIT_RANGE.
#
# For example use, see comments in file `lint-diff.py` in this directory.


DEBUG=""
if [ "$1" = "--debug" ] ; then
    DEBUG="--debug"
    shift
fi
if [ "$#" -gt 1 ] ; then
  echo "echo Usage: $0 [--debug] [DEFAULT-ORGANIZATION]"
  echo "Usage: $0 [--debug] [DEFAULT-ORGANIZATION]" >&2
  echo "exit 2"
  exit 2
fi

if [ "$DEBUG" = "--debug" ] ; then
  env | sed -e 's/^/echo /'
  git log --graph | head --lines=10000 | sed -e 's/^/echo /'
fi


### Organization

## Continuous integration services
if [ "$TRAVIS" = "true" ]; then
  CI_ORGANIZATION=${TRAVIS_PULL_REQUEST_SLUG%/*}
  if [ "$CI_ORGANIZATION" = "" ]; then
    CI_ORGANIZATION=${TRAVIS_REPO_SLUG%/*}
  fi
elif [ -n "$AZURE_HTTP_USER_AGENT" ]; then
  if [ "$BUILD_REASON" = "PullRequest" ]; then
    SLUG=`wget -q -O - https://api.github.com/repos/${BUILD_REPOSITORY_NAME}/pulls/${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER} | jq .head.label | sed 's/"//g'`
    CI_ORGANIZATION=${SLUG%:*}
  else
    CI_ORGANIZATION=${BUILD_REPOSITORY_NAME%/*}
  fi
fi

## Git clone
if [ "$CI_ORGANIZATION" = "" ]; then
  URL=`git config --get remote.origin.url`
  SLUG=${URL#*:}
  CI_ORGANIZATION=${SLUG%/*}
  # TODO: Maybe add a sanity check here.
fi

## Default
if [ "$CI_ORGANIZATION" = "" ]; then
  CI_ORGANIZATION=$1
fi

### Other information

if [ -n "$SYSTEM_PULLREQUEST_TARGETBRANCH" ] ; then
  ## Azure Pipelines
  CI_IS_PULL_REQUEST=true
  CI_IS_PR=1
  CI_BRANCH=$SYSTEM_PULLREQUEST_SOURCEBRANCH
  CI_COMMIT_RANGE_START=`git rev-parse HEAD^1`
  CI_COMMIT_RANGE_END=$BUILD_SOURCEVERSION
  CI_COMMIT_RANGE=${CI_COMMIT_RANGE_START}...${CI_COMMIT_RANGE_END}
elif [ "$TRAVIS" = "true" ] ; then
  ## Travis CI
  CI_IS_PULL_REQUEST=$TRAVIS_PULL_REQUEST
  if [ $TRAVIS_PULL_REQUEST != false ] ; then
    CI_IS_PR=1
  fi
  CI_BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
  echo "echo TRAVIS_PULL_REQUEST_BRANCH=$TRAVIS_PULL_REQUEST_BRANCH;"
  echo "echo TRAVIS_BRANCH=$TRAVIS_BRANCH;"
  echo "echo CI_BRANCH=$CI_BRANCH;"
  # $TRAVIS_COMMIT_RANGE is empty for builds triggered by the initial commit of a new branch.
  CI_COMMIT_RANGE=$TRAVIS_COMMIT_RANGE
elif [ -n "$CIRCLE_COMPARE_URL" ] ; then
  ## CircleCI
  if [ -n "$CIRCLE_PULL_REQUEST" ]; then
    CI_IS_PULL_REQUEST=true
  else
    CI_IS_PULL_REQUEST=false
  fi
  CI_COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | cut -d/ -f7)
  if [ $CI_COMMIT_RANGE != *"..."* ]; then
    CI_COMMIT_RANGE_START=${COMMIT_RANGE}
    CI_COMMIT_RANGE_END=${COMMIT_RANGE}
    CI_COMMIT_RANGE=${CI_COMMIT_RANGE_START}...${CI_COMMIT_RANGE_END}
  fi
  CI_BRANCH=$CIRCLE_BRANCH
else
  # It's not a pull request.
  CI_IS_PULL_REQUEST=false
  # In git 2.22 and later, can use: CI_BRANCH=`git branch --show-current`  (and update test below).
  if [ -n "$BUILD_SOURCEBRANCH" ] ; then
    # In Azure Pipelines:  BUILD_SOURCEBRANCH is a name.  $BUILD_SOURCEVERSION is a commit ID.
    # `ci-lint-diff` deals better with commit IDs (it does not currently handle branch names
    # with "/", like "refs/heads/dependabot/gradle/de.undercouch.download-4.0.2").  In the future,
    # use branch names more often.
    if [ "$BUILD_SOURCEBRANCH" = "master" ] ; then
      CI_BRANCH=$BUILD_SOURCEBRANCH
    else
      CI_BRANCH=$BUILD_SOURCEVERSION
    fi
  else
    CI_BRANCH=`git branch | grep \* | cut -d ' ' -f2`
    # In an Azure Pipelines pull request, `git branch` yields "(HEAD detached at pull/4/merge)".
    # If you re-run a pull request via "Queue" rather than "Rebuild",
    # variables SYSTEM_PULLREQUEST_TARGETBRANCH and SYSTEM_PULLREQUEST_SOURCEBRANCH are not set.
    if [ "$CI_BRANCH" = '(HEAD' ] ; then
      CI_BRANCH=master
    fi
  fi
fi

# Separate from "It's not a pull request" because sometimes this is not set for Travis.
if [ ! -n "$CI_COMMIT_RANGE" ]; then
  if [ "$DEBUG" = "--debug" ] ; then
    echo "echo Setting CI_COMMIT_RANGE from CI_BRANCH=$CI_BRANCH;"
  fi
  if [ "$CI_BRANCH" = "master" ]; then
    CI_COMMIT_RANGE_START=HEAD^1
    CI_COMMIT_RANGE_END=HEAD
  else      
    CI_COMMIT_RANGE_START=master
    CI_COMMIT_RANGE_END=$CI_BRANCH
  fi
  CI_COMMIT_RANGE=${CI_COMMIT_RANGE_START}...${CI_COMMIT_RANGE_END}
fi

if [ ! -n "$CI_COMMIT_RANGE_START" ]; then
  if [ "$DEBUG" = "--debug" ] ; then
    echo "echo Setting CI_COMMIT_RANGE_START from CI_COMMIT_RANGE=$CI_COMMIT_RANGE;"
  fi
  CI_COMMIT_RANGE_START=${CI_COMMIT_RANGE%%.*}
  CI_COMMIT_RANGE_END=${CI_COMMIT_RANGE##*.}
fi

### Print it out

echo "echo CI_ORGANIZATION=$CI_ORGANIZATION;"
echo "CI_ORGANIZATION=$CI_ORGANIZATION; export CI_ORGANIZATION;"
echo "echo CI_IS_PULL_REQUEST=$CI_IS_PULL_REQUEST;"
echo "CI_IS_PULL_REQUEST=$CI_IS_PULL_REQUEST; export CI_IS_PULL_REQUEST;"
if [ -n "$CI_IS_PR" ]; then
  echo "CI_IS_PR=$CI_IS_PR; export CI_IS_PR;"
fi
echo "echo CI_BRANCH=$CI_BRANCH;"
echo "CI_BRANCH=$CI_BRANCH; export CI_BRANCH;"
echo "echo CI_COMMIT_RANGE=$CI_COMMIT_RANGE;"
echo "CI_COMMIT_RANGE=$CI_COMMIT_RANGE; export CI_COMMIT_RANGE;"
echo "echo CI_COMMIT_RANGE_START=$CI_COMMIT_RANGE_START;"
echo "CI_COMMIT_RANGE_START=$CI_COMMIT_RANGE_START; export CI_COMMIT_RANGE_START;"
echo "echo CI_COMMIT_RANGE_END=$CI_COMMIT_RANGE_END;"
echo "CI_COMMIT_RANGE_END=$CI_COMMIT_RANGE_END; export CI_COMMIT_RANGE_END;"
