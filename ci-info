#!/bin/sh

# Outputs information about a CI job, when run under Azure Pipelines,
# CircleCI, or Travis CI.
#
# Use it like this:
#   eval `ci-info`
# For typical use, see comments in file `lint-diff.py` in this directory.

# Here are the variables that it sets:
# IS_PR: Set if it's a pull request, unset otherwise.
# BRANCH: In a PR, the source branch; otherwise, the branch being tested.
# COMMIT_RANGE: An argument to `git diff` with the range of commits.
#    (Don't use it with `git log`, which interprets its argument differently.)

if [ -n "$SYSTEM_PULLREQUEST_TARGETBRANCH" ] ; then
  ## Azure Pipelines
  BASE_COMMIT=`git rev-parse HEAD^1`
  echo "IS_PR=1; export IS_PR;"
  echo "BRANCH=$SYSTEM_PULLREQUEST_TARGETBRANCH; export BRANCH;"
  echo "COMMIT_RANGE=$BASE_COMMIT...$BUILD_SOURCEVERSION; export COMMIT_RANGE;"
elif [ -n "$TRAVIS_COMMIT_RANGE" ] ; then
  ## Travis CI
  # $TRAVIS_COMMIT_RANGE is empty for builds triggered by the initial commit of a new branch.
  if [ $TRAVIS_PULL_REQUEST != false ] ; then
    echo "IS_PR=1; export IS_PR;"
  fi
  echo "BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}; export BRANCH;"
  echo "COMMIT_RANGE=$TRAVIS_COMMIT_RANGE; export COMMIT_RANGE;"
elif [ -n "$CIRCLE_COMPARE_URL" ] ; then
  ## CircleCI
  if [ -n "$CIRCLE_PULL_REQUEST" ]; then
    echo "IS_PR=1; export IS_PR;"
  fi
  COMMIT_RANGE=$(echo "${CIRCLE_COMPARE_URL}" | cut -d/ -f7)
  if [ $COMMIT_RANGE != *"..."* ]; then
    COMMIT_RANGE="${COMMIT_RANGE}...${COMMIT_RANGE}"
  fi
  echo "COMMIT_RANGE=${COMMIT_RANGE}; export COMMIT_RANGE;"
  echo "BRANCH=$CIRCLE_BRANCH; export BRANCH;"
else
  # It's not a pull request.
  BRANCH=`git branch --show-current`
  echo "BRANCH=$BRANCH; export BRANCH;"
  if [ $BRANCH = master ]; then
    echo "COMMIT_RANGE=HEAD^1..HEAD; export COMMIT_RANGE;"
  else      
    echo "COMMIT_RANGE=master...$BRANCH; export COMMIT_RANGE;"
  fi
fi
