#!/bin/sh

# Given a file of warnings, reports only those that are in the diff for the
# current pull request.  Works for Azure Pipelines, CircleCI, and Travis CI.
# Exit status is non-zero if any warnings are output.

# Example use:
#
# git -C /tmp/plume-scripts pull > /dev/null 2>&1 \
#   || git -C /tmp clone --depth 1 -q https://github.com/plume-lib/plume-scripts.git
# (command-that-issues-warnings > /tmp/warnings.txt 2>&1) || true
# /tmp/plume-scripts/ci-lint-diff /tmp/warnings.txt
#
# If you get a warning that /tmp/diff is empty, that might be because your
# clone is shallow and does not contain all the commits.  You can fix that
# by pulling upstream.  Or it might be because your branch is identical to
# the base/upstream branch.

if [ "$#" -ne 1 ] || ! [ -f "$1" ]; then
  echo "Usage: $0 WARNINGS-FILE" >&2
  exit 1
fi
WARNINGSFILE=$1

set -e

SCRIPTDIR="$( cd "$(dirname "$0")" ; pwd -P )"

eval `${SCRIPTDIR}/ci-info`

# Make the branches mentioned in $CI_COMMIT_RANGE available.
if ! git cat-file -e $CI_COMMIT_RANGE_START^{commit}; then
  if ! git show-ref --verify --quiet refs/heads/$CI_COMMIT_RANGE_START > /dev/null 2>&1; then
    git branch --track $CI_COMMIT_RANGE_START origin/$CI_COMMIT_RANGE_START
  fi
fi
if ! git cat-file -e $CI_COMMIT_RANGE_END^{commit}; then
  if ! git show-ref --verify --quiet refs/heads/$CI_COMMIT_RANGE_END > /dev/null 2>&1; then
    git branch --track $CI_COMMIT_RANGE_END origin/$CI_COMMIT_RANGE_END
  fi
fi

set +e
git diff --exit-code $CI_COMMIT_RANGE > /tmp/diff.txt 2>&1
git_status=$?
if [ $git_status -gt 1 ] ; then
  echo "git diff exited with status $git_status"
  cat /tmp/diff.txt
  git diff --exit-code $CI_COMMIT_RANGE
  # "git branch -a". uses paging by default
  git branch -a > /tmp/git-branch-a.txt && cat /tmp/git-branch-a.txt
  git diff $CI_COMMIT_RANGE
  exit 2
fi
set -e
if [ ! -r /tmp/diff.txt ] ; then
  echo "/tmp/diff.txt does not exist"
  exit 2
fi
if [ ! -s /tmp/diff.txt ] ; then
  echo "/tmp/diff.txt is empty for $CI_COMMIT_RANGE ."
  cat /tmp/diff.txt
  echo "Try pulling base branch (often master) into compare branch (often your feature branch)."
  # "git branch -a". uses paging by default
  git branch -a > /tmp/git-branch-a.txt && cat /tmp/git-branch-a.txt
  echo "End of `git branch -a` output."
  git diff $CI_COMMIT_RANGE
  git show $CI_COMMIT_RANGE_START
  git show $CI_COMMIT_RANGE_END
  exit 2
fi

python ${SCRIPTDIR}/lint-diff.py --guess-strip /tmp/diff.txt $WARNINGSFILE
